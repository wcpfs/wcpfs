#!/usr/bin/env bash

abspath="$(cd "${0%/*}" 2>/dev/null; echo "$PWD"/"${0##*/}")"
bin_dir=`dirname $abspath`
root_dir=`dirname $bin_dir`
app_name=`basename $root_dir`

server=${1:-$app_name}

if ! ssh $server 'whoami'; then
  echo "Cannot log into server named $server. Ensure it is properly configured in ~/.ssh/config."
  echo "See README.md for details"
  exit 1
fi

echo "Deploying $app_name to $server"

# Server setup for running on Amazon EC2. Assumes Ubuntu 14.04.
ssh $server <<DOC
if ! git help > /dev/null; then
  sudo apt-get update
  sudo apt-get -y upgrade
  sudo apt-get -y install make g++ git daemontools build-essential ruby1.9.1-dev nginx
  echo "gem: --no-rdoc --no-ri" > ~/.gemrc
  sudo gem install bundler
  git config --global user.email "scheduler@windycitypathfinder.com"
  git config --global user.name "Scheduler"
fi
if [[ ! -d ~/git/$app_name ]]; then
  mkdir -p ~/git/$app_name.git
  cd ~/git/$app_name.git/
  git init --bare
  git --bare update-server-info
fi
DOC

# Add nginx config
ssh $server "sudo tee /etc/nginx/sites-enabled/schedule" < nginx/scheduler
ssh $server <<DOC
  sudo rm /etc/nginx/sites-enabled/default
  sudo /etc/init.d/nginx restart
DOC

# Add post receive hook
ssh $server "cat > ~/git/$app_name.git/hooks/post-receive" <<DOC
#!/bin/sh
mkdir -p ~/apps/$app_name
GIT_WORK_TREE=~/apps/$app_name git checkout -f
git tag -a \`date "+%Y-%m-%d_%H%M%S"\` -m "Tag created by deploy script"
cd ~/apps/$app_name
bundle install --without test
/usr/bin/svc -t ~/apps/$app_name
DOC

# Start svscan; Not sure why, but this doesn't seem to work.
ssh $server <<DOC
chmod +x ~/git/$app_name.git/hooks/post-receive
if ! pgrep svscan; then
  /usr/bin/svscan ~/apps | logger -t supervise &
fi
DOC

git push ubuntu@$server:git/$app_name.git master
